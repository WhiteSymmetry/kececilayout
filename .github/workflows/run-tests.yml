name: Pytest unit/integration

on:
  pull_request:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  build-test:
    name: Test Run (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            export PYTHONUTF8=1
            export SETUPTOOLS_ENABLE_FEATURES="legacy-editable"
            pip install -e .[test] --config-settings editable_mode=strict
            python -m pip install nox
          else
            pip install -e .[test]
          fi
          pip list
          
      - name: Run tests with pytest & nox
        if: ${{ !(matrix.os == 'macos-latest' && (matrix.python-version == '3.10' || matrix.python-version == '3.11' || matrix.python-version == '3.12')) }}
        env:
          PYTHONUTF8: 1
        run: |
          pytest --cov=kececilayout --cov-report=xml
          nox -s tests-${{ matrix.python-version }}
          
      - name: Upload coverage to Codecov
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11' }}
        uses: codecov/codecov-action@v3
