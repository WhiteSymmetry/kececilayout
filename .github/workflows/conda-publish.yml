name: Build and Test Package

on:
  workflow_dispatch: # Sadece manuel tetikleme için

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: false
          python-version: "3.10"
          channels: conda-forge,defaults
          channel-priority: strict
      
      - name: Install Conda-Build
        run: conda install -n base conda-build -y

      - name: Build the package (without testing)
        run: conda build . --output-folder ./conda_pkgs --no-test

      - name: Create a clean environment and install dependencies
        run: |
          # Temiz bir test ortamı oluştur
          conda create -n test-env -y python=3.10
          
          # meta.yaml'da listelenen TÜM CONDA bağımlılıklarını bu ortama kur
          conda install -n test-env -y \
            numpy \
            networkx \
            rustworkx \
            networkit \
            python-igraph \
            python-louvain \
            matplotlib-base \
            pycairo \
            cairocffi \
            cairo

      - name: Install the built package into the test environment
        run: |
          # Oluşturduğumuz paketin dosya yolunu bul
          PACKAGE_FILE=$(ls ./conda_pkgs/noarch/*.conda)
          echo "Installing $PACKAGE_FILE"
          
          # Paketi doğrudan test ortamına kur
          conda install -n test-env -y "$PACKAGE_FILE"
          
      - name: Run final import test and get traceback
        run: |
          echo "--- Installing graphillion in test-env via pip ---"
          conda run -n test-env pip install "graphillion>=1.0"
          
          echo "--- Attempting to import kececilayout ---"
          # Bu komut, hata verirse TAM TRACEBACK'i logda gösterecek
          # ve iş akışını başarısız yapacaktır.
          conda run -n test-env python -c "import kececilayout"

      - name: (Optional) Upload to Anaconda Cloud
        # Bu adımı, testler tamamen çözüldükten sonra etkinleştirin
        if: false # Şimdilik devre dışı
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          anaconda -t $ANACONDA_TOKEN upload \
            ./conda_pkgs/**/*.conda \
            --label main \
            --skip-existing
