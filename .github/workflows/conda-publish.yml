name: Build and Analyze Package

on:
  workflow_dispatch:

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: false
          python-version: "3.10"
          channels: conda-forge,defaults
          channel-priority: strict
      
      - name: Prepare build environment
        run: |
          conda install -n base conda-build -y
      
      - name: Build Conda package (WITHOUT TESTING)
        id: build_step
        run: |
          # Paketi oluşturuyoruz ama henüz test etmiyoruz
          conda build . --output-folder ./conda_pkgs --no-test
          
          # Çıktı paketinin tam yolunu bir sonraki adım için kaydediyoruz
          # not: ls'in tek bir dosya bulacağını varsayıyoruz
          echo "package_path=$(ls ./conda_pkgs/noarch/*.conda)" >> $GITHUB_OUTPUT
          
          # Oluşturulan paketin bulunduğu klasörü bir kanal olarak indeksliyoruz
          # BU SATIR KRİTİK ÖNEME SAHİPTİR
          conda index ./conda_pkgs

      - name: Install and Test the Built Package
        run: |
          # Önceki adımda oluşturulan ve indekslenen paketi YENİ bir ortama kuralım
          # --channel parametresi ile lokal kanalı AÇIKÇA belirtiyoruz
          conda create -n test-env -y --channel "file://$(pwd)/conda_pkgs" "{{ steps.build_step.outputs.package_path | xargs basename }}"

          # Şimdi bu yeni ve temiz ortamda hatayı ayıklayalım
          echo "--- Installing graphillion in test-env ---"
          conda run -n test-env pip install "graphillion>=1.0"
          
          echo "--- Attempting to import kececilayout in test-env ---"
          # '|| true' ekleyerek hata olsa bile iş akışının devam etmesini sağlıyoruz
          # Hata çıktısını doğrudan logda göreceğiz
          conda run -n test-env python -c "import kececilayout" || true

      - name: (Optional) Upload to Anaconda Cloud
        # Bu adımı, testler tamamen çözüldükten sonra etkinleştirin
        if: false # Şimdilik devre dışı
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          anaconda -t $ANACONDA_TOKEN upload \
            ./conda_pkgs/**/*.conda \
            --label main \
            --skip-existing
